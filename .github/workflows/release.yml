name: Release npx package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1)'
        required: true
        type: string
      dry_run:
        description: 'Dry run (no actual publish)'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20'
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "tag=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            # Extract version from git tag
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Update package.json version
        run: |
          pnpm version ${{ steps.version.outputs.version }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.version.outputs.version }}"

      - name: Build and verify package
        run: |
          # Verify the package can be built
          pnpm run prepublishOnly

          # Check what files will be included
          echo "Files to be published:"
          pnpm pack --dry-run

      - name: Publish to npm
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          echo "Publishing version ${{ steps.version.outputs.version }} to npm..."
          pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}

      - name: Create git tag
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          git tag ${{ steps.version.outputs.tag }}
          git push origin ${{ steps.version.outputs.tag }}
          git push origin HEAD:${{ github.ref_name }}

      - name: Create GitHub Release
        if: ${{ github.event.inputs.dry_run != 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body: |
            ## What's New in ${{ steps.version.outputs.version }}

            ### 🚀 Features
            - Universal Cucumber testing tool
            - Works in any project with a features folder
            - Playwright integration

            ### 📦 Installation
            ```bash
            npx pandatest test
            ```

            ### 🔧 Usage
            ```bash
            # Run all tests
            npx pandatest test

            # Run specific feature files
            npx pandatest test features/smoke/*.feature

            # Run with tags
            npx pandatest test --tags @smoke
            ```

            ### 📋 Requirements
            - Node.js 20+
            - A "features" folder with .feature files

            ### 📁 Project Structure
            ```
            features/
            ├── login.feature
            └── smoke/
                └── check_pages.feature
            ```

            ### 🔗 Links
            - [GitHub Repository](https://github.com/${{ github.repository }})
            - [npm Package](https://www.npmjs.com/package/pandatest)

            ---

            *This release was automatically generated by GitHub Actions*
          draft: false
          prerelease: false

      - name: Dry run summary
        if: ${{ github.event.inputs.dry_run == 'true' }}
        run: |
          echo "🎯 DRY RUN COMPLETED"
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Tag: ${{ steps.version.outputs.tag }}"
          echo "No packages were published to npm"
          echo "No git tags were created"
          echo "No GitHub releases were created"

      - name: Success summary
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          echo "🎉 RELEASE COMPLETED SUCCESSFULLY!"
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Tag: ${{ steps.version.outputs.tag }}"
          echo "Package published to npm"
          echo "GitHub release created"
          echo ""
          echo "Users can now run: npx pandatest@${{ steps.version.outputs.version }} test"
