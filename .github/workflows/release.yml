name: Release npx package

on:
  workflow_dispatch:
env:
  NODE_VERSION: '20'
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

concurrency:
  group: Release-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: entech-code/auto-version-tagging-action@HEAD
        id: auto_version_tagging
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          majorVersion: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.auto_version_tagging.outputs.tag }}

      - name: Update package.json version
        run: |
          pnpm version ${{ steps.auto_version_tagging.outputs.version }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.auto_version_tagging.outputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.auto_version_tagging.outputs.tag }}
          release_name: Release ${{ steps.auto_version_tagging.outputs.tag }}
          body:
          draft: false
          prerelease: false

      - name: Publish to npm
        run: |
          echo "Publishing version ${{ steps.auto_version_tagging.outputs.version }} to npm..."
          pnpm publish --ignore-scripts --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}
