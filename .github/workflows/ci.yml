name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check package.json
        run: |
          echo "Checking package.json configuration..."
          echo "Package name: $(node -p "require('./package.json').name")"
          echo "Version: $(node -p "require('./package.json').version")"
          echo "Main entry: $(node -p "require('./package.json').main")"
          echo "Bin entry: $(node -p "require('./package.json').bin")"
          echo "Files to publish: $(node -p "require('./package.json').files.join(', ')")

      - name: Verify npx runner
        run: |
          echo "Verifying npx-runner.js..."
          if [ ! -f "npx-runner.js" ]; then
            echo "❌ npx-runner.js not found"
            exit 1
          fi

          if [ ! -x "npx-runner.js" ]; then
            echo "❌ npx-runner.js is not executable"
            exit 1
          fi

          echo "✅ npx-runner.js exists and is executable"

          # Check shebang
          if ! head -1 npx-runner.js | grep -q "#!/usr/bin/env node"; then
            echo "❌ npx-runner.js missing proper shebang"
            exit 1
          fi

          echo "✅ npx-runner.js has proper shebang"

      - name: Test package build
        run: |
          echo "Testing package build..."
          pnpm pack --dry-run
          echo "✅ Package build test passed"

  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check TypeScript
        run: |
          echo "Checking TypeScript compilation..."
          npx tsc --noEmit
          echo "✅ TypeScript check passed"

      - name: Check ESLint
        run: |
          echo "Checking ESLint..."
          npx eslint src/ --ext .ts
          echo "✅ ESLint check passed"

      - name: Check Prettier
        run: |
          echo "Checking Prettier formatting..."
          npx prettier --check "src/**/*.ts"
          echo "✅ Prettier check passed"
